'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var getFieldsFromAst = function getFieldsFromAst(info, ast) {
  var fields = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

  ast.selectionSet.selections.map(function (selection) {
    if (selection.kind === 'Field') {
      fields[selection.name.value] = selection;
    } else if (selection.kind === 'FragmentSpread') {
      var fragment = info.fragments[selection.name.value];
      getFieldsFromAst(info, fragment, fields);
    }
  });

  return fields;
};

exports.getFieldsFromAst = getFieldsFromAst;
var getFieldsFromInfo = function getFieldsFromInfo(info) {
  return getFieldsFromAst(info, info.fieldASTs[0]);
};

exports.getFieldsFromInfo = getFieldsFromInfo;
var withContext = function withContext(originalPayload, _contextFn) {
  var contextFn = _contextFn;
  if (typeof contextFn !== 'function') {
    (function () {
      var context = contextFn;
      contextFn = function () {
        return context;
      };
    })();
  }

  var resultPayload;
  if (originalPayload instanceof Array) {
    resultPayload = [];
    originalPayload.forEach(function (_o) {
      var o = (0, _lodash.clone)(_o);
      o.__context = contextFn(o);
      resultPayload.push(o);
    });
  } else {
    resultPayload = (0, _lodash.clone)(originalPayload);
    resultPayload.__context = contextFn(originalPayload);
  }

  return resultPayload;
};

exports.withContext = withContext;
var getContext = function getContext(source) {
  return source.__context;
};
exports.getContext = getContext;