import { GraphQLDirective, GraphQLNamedType } from 'graphql';
/**
 * Determines if the given type is natively included in any GraphQL schema (and it is not an introspection type)
 * @param type a GraphQLType or a a type name
 * @returns true for native types, false for other types and for introspection types
 */
export declare function isNativeGraphQLType(type: string | GraphQLNamedType): boolean;
/**
 * Determines if the given directive is natively included in any GraphQL schema
 *
 * This function uses name equality to compare directives, not referential equality. Thus, directives generated from an
 * introspection query with the correct name will be identified as native directives. However, it also means that
 * non-standard directives with native names will be treated as if they were native directives.
 *
 * @param directive a GraphQLDirective or a a directive name
 * @returns true for native directives, false otherwise
 */
export declare function isNativeDirective(directive: string | GraphQLDirective): boolean;
