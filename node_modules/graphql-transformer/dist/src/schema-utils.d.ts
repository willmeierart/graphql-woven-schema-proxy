import { GraphQLField, GraphQLInterfaceType, GraphQLObjectType, GraphQLType } from 'graphql';
/**
 * Orders the given types so that no forward references occur when traversing the type hierarchy
 * Note that only interface implementations and union option types are respected, fields are not included
 */
export declare function orderTypesTopologically<T extends GraphQLType>(types: T[]): T[];
/**
 * Finds a field by traversing a schema from field to field
 * @param type the type where to start
 * @param fieldNames an array of field names to traverse
 * @return the field, or undefined if not found
 */
export declare function walkFields(type: GraphQLObjectType | GraphQLInterfaceType, fieldNames: string[]): GraphQLField<any, any> | undefined;
